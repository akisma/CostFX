name: Deploy Dev

on:
  push:
    branches: [ feature/aws-deploy-v1 ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'deploy/infra/**'
      - 'Dockerfile.*'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-west-2
  APP_NAME: costfx
  ENVIRONMENT: dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_DEV }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Cache Terraform
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d
            ./.terraform
          key: terraform-${{ runner.os }}-${{ hashFiles('deploy/infra/**/*.tf') }}

      - name: Bootstrap Remote State
        run: |
          AWS_REGION=$AWS_REGION ENV=$ENVIRONMENT bash deploy/infra/scripts/bootstrap-remote-state.sh

      - name: Terraform Init (Core - per env key)
        working-directory: deploy/infra
        run: |
          terraform init -reconfigure -backend-config=backend-${ENVIRONMENT}.hcl -input=false

      - name: Terraform Apply (Create ECR only)
        working-directory: deploy/infra
        run: |
          terraform apply -auto-approve \
            -var-file=environments/${ENVIRONMENT}/terraform.tfvars \
            -var create_ecs=false \
            -var backend_image=placeholder \
            -var frontend_image=placeholder

      - name: Build & Push Images
        run: |
          chmod +x deploy/infra/scripts/build-push-images.sh
          GIT_SHA=${GITHUB_SHA::7} AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text) \
            deploy/infra/scripts/build-push-images.sh $ENVIRONMENT

      - name: Terraform Apply (Services)
        working-directory: deploy/infra
        run: |
          terraform apply -auto-approve \
            -var-file=environments/${ENVIRONMENT}/terraform.tfvars \
            -var backend_image=$(cat environments/${ENVIRONMENT}/.backend_image) \
            -var frontend_image=$(cat environments/${ENVIRONMENT}/.frontend_image)
